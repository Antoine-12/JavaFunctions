
package javafuncx;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JOptionPane;

public class fdX extends javax.swing.JFrame {

    /**
     * Creates new form fdX
     */
    public fdX() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jButton1.setText("Cartesiano");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("F(x) = 1/x");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("F(x) = e power x");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("F(x)= sqrt N de x");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("F(x) = log base n de X");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("F(x)= sen(x)");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("F(x)= cos(x)");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("F(x) = tan(x)");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Circle1");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Custom Circle");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Graphics show = jPanel1.getGraphics();
        show.setColor(Color.black);
        
          show.drawLine(0, 250, 500, 250);
          show.drawLine(250, 0, 250, 500);
          
        show.setColor(Color.LIGHT_GRAY);  
        
        show.drawLine(150, 0, 150, 500);
        show.drawLine(50, 0, 50, 500);
        show.drawLine(350, 0, 350, 500);
        show.drawLine(450, 0, 450, 500);
        
        //vertical Lines
        show.setColor(Color.LIGHT_GRAY);
        show.drawLine(0, 150, 500, 150); 
        show.drawLine(0, 50, 500, 50); 
        show.drawLine(0, 350, 500, 350); 
        show.drawLine(0, 450, 500, 450); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       function1();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        function2();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        function3();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        function4();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        function5Sen();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        function6Cos();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        function7Tan();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        circle1();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        circle2();
    }//GEN-LAST:event_jButton11ActionPerformed

    public void function1(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.blue);
        
        for (double x = -50; x <= 50; x+= 0.5) {
            if (x==0) continue;
            double y = (1 / x)*15;
            
            func.drawOval(247+(int)(x*15),247- (int)(y*15), 6, 6);
            
        }
    }
    
    public void function2(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.red);
        
        for (double x = -250; x <= 250; x+= 0.567) {
            double y = Math.pow(Math.E,x)*100;
            
            func.drawOval(247+(int)(x*50), 247-(int)y, 6, 6);    
        }
    }
    
    public void function3(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.green);
        
        String num = JOptionPane.showInputDialog(this, "enter you number: ");
        
        double nm = Double.parseDouble(num);
        
    for (double x = -250; x <= 250; x+=0.6) {
        double y;

        // Evita errores cuando nm es par y x es negativo
        if (nm % 2 == 0 && x < 0) {
            continue; // Salta la iteración si x es negativo y n es par
        } else {
            y = Math.pow(Math.abs(x), 1.0 / nm) * 50; // Aplicar escala
            if (x < 0 && nm % 2 != 0) {
                y = -y; // Manejo de raíces impares negativas
            }
        }
            func.drawOval(247 +(int)(x*20), 247-(int)y, 6, 6);
        }
    
    }
    
    public void function4(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.orange);
        
        String num = JOptionPane.showInputDialog(this,"Please enter your number; ");
        
        double nm = Double.parseDouble(num);
        
        if (nm <= 0 || nm == 1) {
        JOptionPane.showMessageDialog(this, "Base must be greater than 0 and not equal to 1.");
        return;
    }

    for (double x = 1; x <= 250; x+=1.0) { // Empezamos en x = 1 porque log(x) no existe para x <= 0
        if(x == 0) continue;
        double y = (Math.log(x) / Math.log(nm)) * 100; // Aplicar escala

        func.drawOval(247 + (int)(x * 2), 247 - (int)y, 6, 6); 
    }
 
        
    }
    
    public void function5Sen(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.pink);
        
        for (int x = -250; x < 250; x++) {
            double upd = Math.toRadians(x);
            double y = Math.sin(upd)*100;
            
            func.drawOval(247 +x, 247-(int)y, 6, 6);
        }
        
    }
    
    public void function6Cos(){
         Graphics func = jPanel1.getGraphics();
        func.setColor(Color.green);
        
        for (int x = -250; x < 250; x++) {
            double upd = Math.toRadians(x);
            double y = Math.cos(upd)*100;
            func.drawOval(247 +x, 247-(int)y, 6, 6);
        }
        
    }
    
    public void function7Tan(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.CYAN);
        
        for (int x = -250; x < 250; x++) {
            double upd = Math.toRadians(x);
            double y = Math.tan(upd)*100;
            
            func.drawOval(247+x, 247-(int)y, 6, 6);
        }
        
    }
    
    public void circle1(){
        Graphics func = jPanel1.getGraphics();
        
        
        String [] sC = {"RED", "YELLOW","BLUE"};
        int coc = JOptionPane.showOptionDialog(this, "PICK your favorite color", "",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, sC,sC[0]);
        
        switch (coc){
            case 0:
              func.setColor(Color.RED);  
              break;
            case 1:
              func.setColor(Color.yellow);
              break;
            case 2:
              func.setColor(Color.blue);
              break;  
        }
         
        double radN = -1; 

        while (radN <= 0) {
            String rad = JOptionPane.showInputDialog(this, "Enter your circle's radius (must be greater than 0):");
        try {
        radN = Double.parseDouble(rad);
        if (radN <= 0) {
            JOptionPane.showMessageDialog(this, "The radius must be greater than 0. Please try again.");
            }
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid number.");
            }
         }
        try{
            
        String nm1 = JOptionPane.showInputDialog(this,"please enter you cordenate X");
        String nm2 = JOptionPane.showInputDialog(this,"please enter you cordenate Y");
        
        int x = Integer.parseInt(nm1);
        int y = Integer.parseInt(nm2);
        
        int vS = (int)(radN*2);
        int mid = (int)(vS/2.0);
        
        func.drawOval(250-mid+x, 250-mid-y, vS, vS);
        
        
        //Area
        double area = Math.PI * Math.pow(radN, 2);
        //perimeter
        double perim = 2 * Math.PI * radN;
        JOptionPane.showMessageDialog(this,"the Area is: "+area +"\n The perimeter is: "+perim);  
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "you messed up, try again pls");
        }
        
        
        
    }
    
    public void circle2(){
        Graphics func = jPanel1.getGraphics();
        func.setColor(Color.blue);
        try{
            
        String cod1 = JOptionPane.showInputDialog(this,"Please enter your coordante X: ");
        String cod2 = JOptionPane.showInputDialog(this,"Please enter your coordante Y: ");
        
        int po1 = Integer.parseInt(cod1);
        int po2 = Integer.parseInt(cod2);
        
        int cl = -1; 
        int rat = -1;

        while (cl <= 0) {
            String cir = JOptionPane.showInputDialog(this, "how many circles do you wanna perform?");
        try {
        cl = Integer.parseInt(cir);
        if (cl <= 0) {
            JOptionPane.showMessageDialog(this, "The number must be greater than 0. Please try again.");
            }
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid number.");
            }
         }
        
        while(rat <= 0){
            String rad = JOptionPane.showInputDialog(this, "the radio will increase based on the entered number");
            try{
                rat = Integer.parseInt(rad);
            if (rat <= 0) {
                JOptionPane.showMessageDialog(this, "The radio must be greater than 0. Please try again.");
            }
            }
            catch(Exception e){
                     JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid number.");
                    }
        }
        
        String [] sC = {"RED","BLUE","YELLOW"};
        int coc = JOptionPane.showOptionDialog(this,"Pick your color","Primary colors",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, sC,sC[0]);
        
        switch(coc){
            case 0:
                func.setColor(Color.red);
                break;
            case 1:
                func.setColor(Color.blue);
                break;
            case 2:
                func.setColor(Color.yellow);
                break;
        }
        
        for (int x = 0; x < cl; x++) {
            
            int rdo = (x+1)*rat *2;
            int mid = rdo / 2;
            
            func.drawOval((250+po1)-mid, (250-po2)-mid, rdo, rdo);
            
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Sorry you messed up, try again");
        }   
    }
    
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}

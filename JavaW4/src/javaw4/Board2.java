package javaw4;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JOptionPane;

public class Board2 extends javax.swing.JFrame {

    public Board2() {
        initComponents();
        setLocationRelativeTo(null);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jButton1.setText("cartesiano");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("equacion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("f(x) x*x");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cuadratica");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("x*x*x");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("figuras eje");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Polygon");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2)
                        .addGap(36, 36, 36)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(12, 12, 12)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Graphics car = jPanel1.getGraphics();
        
        car.setColor(Color.red);
        
        
        car.drawLine(250, 0, 250, 500);
        car.drawLine(0, 250, 500, 250);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        Graphics car = jPanel1.getGraphics();    
        car.setColor(Color.blue);
        
        String pendiente = JOptionPane.showInputDialog(this, "Ingrese m: ");
        String intercepto = JOptionPane.showInputDialog(this, "Ingrese b: ");
        
        int m = Integer.parseInt(pendiente);
        int b = Integer.parseInt(intercepto);
        
        for (int x = -250; x <= 250; x++) {
            int y = m*x+b;
        car.drawOval(250-3 + x, 250-3 - y, 6, 6);
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jPanel1.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
          Graphics car = jPanel1.getGraphics();    
        car.setColor(Color.blue);
        
         for (int x = -250; x <= 250; x++) {
            int y = x*x;
        car.drawOval(250-3 + x, 250-3 - y, 6, 6);
        // 
       // Math.sqrt(y);
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           Graphics car = jPanel1.getGraphics();
    car.setColor(Color.blue);

    // Solicitar coeficientes A, B y C al usuario
    String apo = JOptionPane.showInputDialog(this, "Please enter A");
    String bpo = JOptionPane.showInputDialog(this, "Please enter B");
    String cpo = JOptionPane.showInputDialog(this, "Please enter C");

    // Convertir entradas a enteros
    int a = Integer.parseInt(apo);
    int b = Integer.parseInt(bpo);
    int c = Integer.parseInt(cpo);

    // -------------------------------
    // Calcular el discriminante Δ = b^2 - 4ac
    double discriminante = Math.pow(b, 2) - 4 * a * c;
  //  String mensaje;

    if (discriminante > 0) {
        // Dos soluciones reales
        double x1 = (-b + Math.sqrt(discriminante)) / (2 * a);
        double x2 = (-b - Math.sqrt(discriminante)) / (2 * a);
        //mensaje = "La ecuación tiene dos soluciones reales:\n" +
          //        "x1 = " + x1 + "\n" +
          //        "x2 = " + x2;
        JOptionPane.showMessageDialog(this, "La ecuacion tiene dos soluciones: \n x1 = "+x1+" \nx2 = "+x2);
    } else if (discriminante == 0) {
        // Una solución real
        double x = -b / (2.0 * a);
       // mensaje = "La ecuación tiene una única solución:\n" + "x = " + x;
        JOptionPane.showMessageDialog(this, "La ecuacion tiene solo una solucion: x = "+x);
    } else {
        // No hay soluciones reales
        //mensaje = "La ecuación no tiene soluciones reales.";
        JOptionPane.showMessageDialog(this, "la ecuacion no tiene soluciones reales ");
    }

    // Bucle para graficar la función cuadrática
    for (int x = -250; x <= 250; x++) {
        int y = (int)(a * Math.pow(x, 2) + b * x + c); // Fórmula cuadrática

        y = y / 10; // Escalar para que se ajuste al panel
        car.drawOval(250 - 3 + x, 250 - 3 - y, 6, 6); // Dibuja el punto
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         Graphics car = jPanel1.getGraphics();
    car.setColor(Color.blue);
    
        for (int x = -250; x <= 250; x++) {
            int y = (int)(Math.pow(x, 3));
            y = y/60;
           car.drawOval(250-3 +x, 250-3 -y, 6, 6);
        }
        
    
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        shapes();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        polyg();
    }//GEN-LAST:event_jButton8ActionPerformed

    public void cuadrado(){
         Graphics square = jPanel1.getGraphics();
        square.setColor(Color.blue);
        
        String [] options = {"small", "midium","huge"};
        int slection = JOptionPane.showOptionDialog(this, "select size", "chouse your size",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
        
         int rectSize;
    if (slection == 0) {  // small
        rectSize = 30;
    } else if (slection == 1) {  // medium
        rectSize = 50;
    } else if (slection == 2) {  // huge
        rectSize = 70;
    } else {  
        rectSize =30;
    }
        
        try {
        String point1 = JOptionPane.showInputDialog(this, "enter coordenates X: ");
        String point2 = JOptionPane.showInputDialog(this, "enter coordenates y: ");
        
        int px = Integer.parseInt(point1);
        int py = Integer.parseInt(point2);
        
        int cp = 250 + px;
        int cy = 250 - py;
      
        //customize
        square.drawRect(cp, cy, rectSize, rectSize);
    }
    catch(Exception e){
    JOptionPane.showMessageDialog(this, "Something went wrong,\n use this way #100,100#");
}
    }
    public void shapes(){
        Graphics shapes = jPanel1.getGraphics();
        shapes.setColor(Color.orange);
        
        String [] opShape = {"Square", "Triangle", "Oval"};
        String [] size = {"Small", "Midium","Huge"};
        
        int opt1 = JOptionPane.showOptionDialog(this, "chose your figure", "", 
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opShape, opShape[1]);
        
        int opt2 = JOptionPane.showOptionDialog(this, "chose your sizes:", "", 
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, size, size[1]);
        
        if (opt1 == 0) {
            
            int xS;
    if (opt2 == 0) {  // small
        xS = 30;
    } else if (opt2 == 1) {  // medium
        xS = 50;
    } else if (opt2 == 2) {  // huge
        xS = 70;
    } else {  
        xS =30;
    }
            
    try{
        String ejex = JOptionPane.showInputDialog(this, "enter X' cordenate: ");
        String ejey = JOptionPane.showInputDialog(this, "enter Y' cordenate: ");
        
        int px = Integer.parseInt(ejex);
        int py = Integer.parseInt(ejey);
          
            shapes.drawRect(250 + px, 250 - py, xS, xS);   
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(this, "you messed up, try again");
    }     
        }else if (opt1 == 1) {
            try{
    String ejex = JOptionPane.showInputDialog(null, "Enter X coordinate: ");
    String ejey = JOptionPane.showInputDialog(null, "Enter Y coordinate: ");
    
    int px = Integer.parseInt(ejex);
    int py = Integer.parseInt(ejey);
    

    // Calcular las coordenadas del triángulo basado en (px, py)
    px = 250 + px;
    py = 250 - py;
            
            int[] tX;
            int[] tY;
         
            if (opt2 == 0) {
                
    int base = 20;   // Ancho de la base
    int altura = 30; // Altura del triángulo
    tX = new int[]{px - (base / 2), px + (base / 2), px}; // Base izquierda, Base derecha, Punta
    tY = new int[]{py + (altura / 2), py + (altura / 2), py - altura}; // Base horizontal, Punta más arriba
    } else if (opt2 == 1) {
        
    int base = 40;   // Ancho de la base
    int altura = 50; // Altura del triángulo
    tX = new int[]{px - (base / 2), px + (base / 2), px}; // Base izquierda, Base derecha, Punta
    tY = new int[]{py + (altura / 2), py + (altura / 2), py - altura}; // Base horizontal, Punta más arriba
      
    } else {
    int base = 60;   // Ancho de la base
    int altura = 70; // Altura del triángulo
    tX = new int[]{px - (base / 2), px + (base / 2), px}; // Base izquierda, Base derecha, Punta
    tY = new int[]{py + (altura / 2), py + (altura / 2), py - altura}; // Base horizontal, Punta más arriba
       
    }
    shapes.drawPolygon(tX, tY, 3);
            }

            catch(Exception e){
                JOptionPane.showMessageDialog(this, "you screwed up, try again");
            }    
        }else{
            int xO;
    if (opt2 == 0) {  // small
        xO = 30;
    } else if (opt2 == 1) {  // medium
        xO = 50;
    } else if (opt2 == 2) {  // huge
        xO = 70;
    } else {  
        xO =30;
    }
            
    try{
        String ejex = JOptionPane.showInputDialog(this, "enter X' cordenate: ");
        String ejey = JOptionPane.showInputDialog(this, "enter Y' cordenate: ");
        
        int px = Integer.parseInt(ejex);
        int py = Integer.parseInt(ejey);
            
            shapes.drawOval(250 + px, 250 - py, xO,xO);
            
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(this, "you messed up, try again");
    } 
            
            
        }
        
    }
    
    public void polyg(){
        Graphics pol = jPanel1.getGraphics();
        pol.setColor(Color.ORANGE);
       
        String [] opts = {"Small","Medium","Huge"};
        int selet = JOptionPane.showOptionDialog(this,"chouse your size","",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opts, opts[1]);
        
       String c1 = JOptionPane.showInputDialog(this, "enter your coordenate x: ");
       String c2 = JOptionPane.showInputDialog(this, "enter your coordenate y: ");
        
        int px = Integer.parseInt(c1);
        int py = Integer.parseInt(c2);
        
        
        
        int [] x;
        int [] y;
        
        
        if (selet == 0) {

        //x = new int[] {250-py, 270-py, 290-py, 290-py, 270-py}; 
        //y = new int[] {250-py, 270-py, 290-py, 290-py, 270-py}; 
        x = new int[]{260+px, 275+px, 285+px, 268+px, 250+px};
        y = new int[]{250-py, 250-py, 230-py, 210-py, 230-py};
        
            
        }else if (selet == 1) {
        x = new int[] {250 +px, 270+px, 260+px, 240+px, 230+px}; 
        y = new int[] {250-py, 270-py, 290-py, 290-py, 270-py}; 

            
        }else{
        x = new int[] {250 +px, 270+px, 260+px, 240+px, 230+px}; 
        y = new int[] {250-py, 270-py, 290-py, 290-py, 270-py};
        }
        
        pol.drawPolygon(x, y, 5);
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
